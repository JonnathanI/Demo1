server:
  port: 8081

spring:
  # ------------------------------------
  # 1. ðŸ›‘ CONFIGURACIÃ“N DE BASE DE DATOS (NUEVAS CREDENCIALES)
  # ------------------------------------
  datasource:
    # URL con la nueva pooler endpoint
    url: jdbc:postgresql://ep-square-bird-ad3rs3zp-pooler.c-2.us-east-1.aws.neon.tech/neondb?sslmode=require
    # El usuario y contraseÃ±a se mantienen para el pooler endpoint
    username: neondb_owner
    password: npg_LlfIeik5o9hV # <--- Â¡Nueva contraseÃ±a!
    driverClassName: org.postgresql.Driver

  # 2. ConfiguraciÃ³n de JPA/Hibernate
  jpa:
    hibernate:
      # Dejamos 'update' para que Hibernate intente agregar la columna del avatar si no existe
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true

  # 3. ConfiguraciÃ³n de Flyway (Se mantiene igual)
  flyway:
    enabled: true
    baselineVersion: 1
    locations: classpath:db/migration
    sqlMigrationSuffixes: .sql
    baselineOnMigrate: true
    sqlMigrationPrefix: V
    schemas: public

  # 4. CONFIGURACIÃ“N DEL SERVICIO DE CORREO (Se mantiene igual)
  mail:
    host: smtp.gmail.com
    port: 587
    username: jonnathanjose043@gmail.com
    password: hbdc rqfj eyig mynp
    protocol: smtp
    test-connection: false
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
          ssl:
            trust: smtp.gmail.com

# 5. CONFIGURACIÃ“N ADICIONAL PARA SERVICIOS EXTERNOS (GOOGLE)
google:
  client:
    id: 203925615165-ppgtpa9cmgq1eichb76u0kcr5pmgn8pi.apps.googleusercontent.com